# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type CountryCode {
  country_code: String!
}

type ProjectCategory {
  project_category: String!
}

type ProjectImage {
  projectImage_id: String!
  image_url: String!
  image_index: Int!
  project: Project!
}

type Project {
  project_id: String!
  title: String!
  content: String!
  amount_required: Int!
  amount_raised: Int!
  donation_count: Int!
  cityName: String!
  location: String!
  created_at: DateTime!
  user: User!
  projectCategory: ProjectCategory!
  countryCode: CountryCode!
  projectImages: [ProjectImage!]!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type ProjectDonation {
  projectDonation_id: String!
  imp_uid: String!
  amount: Int!
  status: PROJECT_DONATION_STATUS_ENUM!
  created_at: DateTime!
  user: User!
  project: Project!
}

enum PROJECT_DONATION_STATUS_ENUM {
  PAYMENT
  CANCEL
}

type User {
  user_id: String!
  email: String!
  name: String!
  profile_image_url: String
  created_at: DateTime!
  projects: [Project!]!
  projectDonations: [ProjectDonation!]!
}

type FetchUserLoggedInResponseDTO {
  user_id: String!
  name: String!
  profile_image_url: String
}

type UpdateUserResponseDTO {
  name: String
  profile_image_url: String
}

type ProjectComment {
  projectComment_id: String!
  content: String!
  maxDonationAmount: Int
  created_at: DateTime!
  user: User!
  project: Project!
}

type FetchProjectOgResponseDTO {
  title: String!
  content: String!
}

type CreateUserResponseDTO {
  accessToken: String!
}

type FetchUserDonatedNCommentedResponseDTO {
  donated: Boolean!
  commented: Boolean!
  id: String!
}

type CreateProjectDonationResponseDTO {
  success: Boolean!
}

type DeleteProjectCommentResponseDTO {
  success: Boolean!
}

type UpdatedProject {
  updatedProject_id: String!
  content: String!
  created_at: DateTime!
  project: Project!
}

type Query {
  fetchProjectComments(project_id: String!, offset: Float!): [ProjectComment!]!
  fetchProject(project_id: String!): Project!
  fetchProjectOg(project_id: String!): FetchProjectOgResponseDTO!
  fetchProjects(fetchProjectsOption: String!, offset: Float!): [Project!]!
  fetchMarkers(north: Float!, south: Float!, east: Float!, west: Float!): [Project!]!
  fetchProjectsByCountry(country_code: String!, offset: Float!): [Project!]!
  searchProjects(project_category: String!, searchTerm: String!, offset: Float!): [Project!]!
  fetchUpdatedProjects(project_id: String!): [UpdatedProject!]!
  fetchUserLoggedIn: FetchUserLoggedInResponseDTO!
  fetchUserLoggedInProjects(offset: Float!): [Project!]!
  fetchUserLoggedInDonations(offset: Float!): [ProjectDonation!]!
  fetchUserDonatedNCommented(project_id: String!): FetchUserDonatedNCommentedResponseDTO!
}

type Mutation {
  loginUser(loginDTO: LoginDTO!): String!
  restoreAccessToken: String!
  logout: String!
  createProjectComment(createProjectCommentDTO: CreateProjectCommentDTO!): ProjectComment!
  updateProjectComment(updateProjectCommentDTO: UpdateProjectCommentDTO!): ProjectComment!
  deleteProjectComment(deleteProjectCommentDTO: DeleteProjectCommentDTO!): DeleteProjectCommentResponseDTO!
  createProject(createProjectDTO: CreateProjectDTO!): Project!
  createProjectDonation(createProjectDonationDTO: CreateProjectDonationDTO!): CreateProjectDonationResponseDTO!
  createProjectDonationForMobile(createProjectDonationForMobileDTO: CreateProjectDonationForMobileDTO!): CreateProjectDonationResponseDTO!
  createUpdatedProject(createUpdatedProjectDTO: CreateUpdatedProjectDTO!): UpdatedProject!
  createUser(createUserDTO: CreateUserDTO!): CreateUserResponseDTO!
  updateUser(updateUserDTO: UpdateUserDTO!): UpdateUserResponseDTO!
}

input LoginDTO {
  email: String!
  password: String!
}

input CreateProjectCommentDTO {
  content: String!
  project_id: String!
}

input UpdateProjectCommentDTO {
  content: String!
  project_id: String!
  projectComment_id: String!
}

input DeleteProjectCommentDTO {
  project_id: String!
  projectComment_id: String!
}

input CreateProjectDTO {
  title: String!
  content: String!
  amount_required: Int!
  project_category: PROJECT_CATEGORY_ENUM! = Medical
  countryCode: String!
  cityName: String!
  lat: Float!
  lng: Float!
  projectImageUrls: String!
}

enum PROJECT_CATEGORY_ENUM {
  Medical
  Emergency
  Memorial
  Education
  CrisisRelief
  Nonprofit
}

input CreateProjectDonationDTO {
  imp_uid: String!
  amount: Int!
  project_id: String!
}

input CreateProjectDonationForMobileDTO {
  imp_uid: String!
  project_id: String!
}

input CreateUpdatedProjectDTO {
  content: String!
  project_id: String!
}

input CreateUserDTO {
  email: String!
  name: String!
  password: String!
}

input UpdateUserDTO {
  name: String
  profile_image_url: String
}